daemon off;
error_log /dev/stderr warn;

worker_processes auto;

events {
  worker_connections 65536;
  multi_accept on;
}

http {
  access_log /dev/stdout;

  proxy_redirect off;
  proxy_intercept_errors on;
  proxy_buffering on;
  proxy_buffer_size 128k;
  proxy_buffers 256 16k;
  proxy_busy_buffers_size 256k;
  proxy_temp_file_write_size 256k;
  proxy_max_temp_file_size 0;
  proxy_read_timeout 300;
  keepalive_timeout 10;

  # static text server used to establish a baseline for what's possible with
  # http connections.
  server {
      listen 8081 default_server;
      server_name static.benchmark.local;

      location /warmup {
          return 200 'OK';
          add_header Content-Type text/plain;
      }
      location /alive {
          return 200 'OK';
          add_header Content-Type text/plain;
      }
      location /login {
          return 200 '{"token":"bGV0bWVpbg==","user":"admin"}';
          add_header Content-Type application/json;
      }
      location /platform {
          return 200 'nginx $nginx_version';
          add_header Content-Type text/plain;
      }
  }

  # For servers listening on a unix socket (puma)
  upstream socket_app {
    server unix:///tmp/benchmark_server_socket.sock;
  }

  server {
    listen 8082;
    server_name socket_app.benchmark.local;
    location / {
      proxy_pass http://socket_app;
    }
  }

  # proxy to running http host (phoenix, amber)
  server {
    listen 8083;
    server_name tcp_app.benchmark.local;
    location / {
      proxy_pass http://127.0.0.1:7000;
    }
  }
}
